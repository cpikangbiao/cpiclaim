entity CpiInsuranceType {
	sortNum Integer  ,
	cpiInsuranceTypeName String required ,
}

entity CaseSettlementMode {
	sortNum Integer  ,
	settlementModeName String required ,
}

entity CaseStatusType {
	sortNum Integer  ,
	caseStatusName String required ,
}

entity VesselCase {
	numberId Integer required ,
	caseYear String  ,
	insuredVesselId Long required ,
	companyName String  ,
	vesselName String  ,
	companyChineseName String  ,
	vesselChineseName String  ,
	reinsureId Long  ,
	deduct BigDecimal  ,
	assignedHandler Long  ,
	assignedTime Instant  ,
	registeredHandler Long  ,
	registeredDate Instant  ,
	caseCode String required ,
	caseDate Instant  ,
	caseLocation Long  ,
	caseDescription String  ,
	voyageNo String  ,
	loadingPort Long  ,
	loadingDate Instant  ,
	dischargingPort Long  ,
	dischargingDate Instant  ,
	limitTime Instant  ,
	cpDate Instant  ,
	cpType String  ,
	arrestVessel String  ,
	jurisdiction Long  ,
	applicableLaw Long  ,
	closeDate Instant  ,
	closeHandler Long  ,
	remark TextBlob  ,
	settlementAmount BigDecimal  ,
	settlementDate Instant  ,
}

relationship ManyToOne {
	VesselCase{cpiInsuranceType(cpiInsuranceTypeName)} to CpiInsuranceType
}

relationship ManyToOne {
	VesselCase{caseStatus(caseStatusName)} to CaseStatusType
}

relationship ManyToOne {
	VesselCase{settlementMode(settlementModeName)} to CaseSettlementMode
}


entity RiskGroup {
	sortNum Integer  ,
	RiskGroupName String required ,
}


entity Risk {
	sortNum Integer  ,
	tclType Boolean  ,
	piType Boolean  ,
	riskName String  ,
	riskNameChinese String  ,
	riskNameEnglish String  ,
	riskNameEnglishAbbr String  ,
}


relationship ManyToOne {
	Risk{riskGroup(riskGroupName)} to RiskGroup
}


entity VesselSubCase {
	numberId Integer  ,
	assignedUserId Long  ,
	insertTime Instant  ,
	subcaseCode String  ,
	blNo String  ,
	claimant String  ,
	claimAmount String  ,
	currency Long  ,
	deductible BigDecimal  ,
	currencyRate BigDecimal  ,
	deductDollar BigDecimal  ,
	remark TextBlob  ,
}

relationship ManyToOne {
	VesselSubCase{vesselCase(caseCode)} to VesselCase
}

relationship ManyToOne {
	VesselSubCase{risk(riskName)} to Risk
}



entity CaseEstimate {
	numberId Integer  ,
	registerUserId Long  ,
	estimateDate Instant  ,
	estimateEntityFee BigDecimal  ,
	estimateCostFee BigDecimal  ,
	remark TextBlob  ,
}

relationship ManyToOne {
	CaseEstimate{subcase(subcaseCode)} to VesselSubCase
}

entity CaseClaim {
 	numberId Integer  ,
 	claimer String  ,
 	claimDate Instant  ,
 	billOfLading String  ,
 	currencyId Long  ,
 	currencyRate BigDecimal  ,
 	claimCost BigDecimal  ,
 	claimCostDollar BigDecimal  ,
 	remark TextBlob  ,
 }

relationship ManyToOne {
 	CaseClaim{subcase(subcaseCode)} to VesselSubCase
}

entity Creditor {
	creditorCode String  ,
	creditorName String  ,
	creditorAddress String  ,
	portName String  ,
	swiftCode String  ,
	ibanCode String  ,
	bankName String  ,
	bankAddress String  ,
	accountNo String  ,
	corrBankName String  ,
	corrBankAddress String  ,
	corrBankName2 String  ,
	corrBankAddress2 String  ,
}

entity PaymentType {
	sortNum Integer  ,
	paymentTypeName String required ,
}

entity CasePayment {
	clientNo String  ,
	numberId Integer  ,
	payCostDate Instant  ,
	currency Long  ,
	currencyRate BigDecimal  ,
	payCost BigDecimal  ,
	payCostDollar BigDecimal  ,
	deduct BigDecimal  ,
	amount BigDecimal  ,
	feeCreateUser Long  ,
	feeCreateDate Instant  ,
	remark TextBlob  ,
}

relationship ManyToOne {
	CasePayment{paymentType(paymentTypeName)} to PaymentType
}

relationship ManyToOne {
	CasePayment{subcase(subcaseCode)} to VesselSubCase
}

relationship ManyToOne {
	CasePayment{creditor(creditorCode)} to Creditor
}

entity RecoveryType {
	sortNum Integer  ,
	recoveryTypeName String required ,
}


entity CaseRecovery {
	clientNo String  ,
	numberId Integer  ,
	currency Long  ,
	currencyRate BigDecimal  ,
	issueDate Instant  ,
	issueAmount BigDecimal  ,
	receivedDate Instant  ,
	receivedAmount BigDecimal  ,
	amountDollar BigDecimal  ,
	registerDate Instant  ,
	registerUser Long  ,
	remark TextBlob  ,
 }

relationship ManyToOne {
	CaseRecovery{subcase(subcaseCode)} to VesselSubCase
}

relationship ManyToOne {
	CaseRecovery{recoveryType(recoveryTypeName)} to RecoveryType
}

relationship ManyToOne {
	CaseRecovery{creditor(creditorCode)} to Creditor
}


entity FeeType {
	sortNum Integer  ,
	feeTypeName String required ,
}

entity CaseFee {
	clientNo String  ,
	numberId Integer  ,
	currency Long  ,
	currencyRate BigDecimal  ,
	feeCostDate Instant  ,
	feeCost BigDecimal  ,
	feeCostDollar BigDecimal  ,
	deduct BigDecimal  ,
	deductCurrency Long  ,
	deductCurrencyRate BigDecimal  ,
	deductAmount BigDecimal  ,
	amountDollar BigDecimal  ,
	feeCreateUser Long  ,
	feeCreateDate Instant  ,
	remark TextBlob  ,
	isSigned Boolean  ,
	signUser Long  ,
	signDate Long  ,
	processId Long  ,
}

relationship ManyToOne {
	CaseFee{feeType(feeTypeName)} to FeeType
}

relationship ManyToOne {
	CaseFee{subcase(subcaseCode)} to VesselSubCase
}

relationship ManyToOne {
	CaseFee{creditor(creditorCode)} to Creditor
}


entity GuaranteeType {
	sortNum Integer  ,
	GuaranteeTypeName String required ,
}

entity CaseGuarantee {
	vesselId Long  ,
	numberId Integer  ,
	arrestDate Instant  ,
	arrestPort Long  ,
	arrestVesselId Long  ,
	arrestVesselName String  ,
	billOfLading String  ,
	billLadingDate Instant  ,
	natureOfClaim String  ,
	guarantee String  ,
	guaranteeDate Instant  ,
	guaranteeCurrency Long  ,
	guaranteeRate BigDecimal  ,
	guaranteeAmount BigDecimal  ,
	guaranteeAmountDollar BigDecimal  ,
	guaranteeTo String  ,
	guaranteeToAddress String  ,
	guaranteeNo String  ,
	guaranteeFee BigDecimal  ,
	guaranteeOther String  ,
	cancelDate Instant  ,
	conGuarantee String  ,
	conGuaranteeDate Instant  ,
	conGuaranteeCurrency Long  ,
	conGuaranteeRate BigDecimal  ,
	conGuaranteeAmount BigDecimal  ,
	conGuaranteeAmountDollar BigDecimal  ,
	conGuaranteeNo String  ,
	conGuaranteeTo String  ,
	conGuaranteeCancelDate Instant  ,
	remark TextBlob  ,
	releaseDate Instant  ,
	registerUserId Long  ,
 }

relationship ManyToOne {
	CaseGuarantee{subcase(subcaseCode)} to VesselSubCase
}

relationship ManyToOne {
	CaseGuarantee{guaranteeType(GuaranteeTypeName)} to GuaranteeType
}

relationship ManyToOne {
	CaseGuarantee{conGuaranteeType(GuaranteeTypeName)} to GuaranteeType
}



entity CaseAssignLog {
	numberId String ,
	assignUser String ,
	assignTime Instant ,
	assignedUser String ,
}

relationship ManyToOne {
	CaseAssignLog{vesselCase(caseCode)} to VesselCase
}

entity CaseRegisterLog {
	numberId String ,
	assignUser String ,
	assignTime Instant ,
	assignedUser String ,
}

relationship ManyToOne {
	CaseRegisterLog{vesselCase(caseCode)} to VesselCase
}

entity CaseCloseLog {
	operateUserId String ,
	operateDate Instant ,
	operateType String ,
}

relationship ManyToOne {
	CaseCloseLog{vesselCase(caseCode)} to VesselCase
}

entity ClaimBillType {
	sortNum Integer  ,
	claimBillTypeName String required ,
}

entity ClaimBillStatus {
	sortNum Integer  ,
	claimBillStatusName String required ,
}

entity ClaimBillFinanceType {
	sortNum Integer  ,
	claimBillFinanceTypeName String required ,
}


entity CaseClaimBill {
	claimBillCode String  ,
	claimBillDate Instant  ,
	registerUserId Long  ,
	clientBillNo String  ,
	billDescription String  ,
	dueDate Instant  ,
	memberYear String  ,
	numberId Integer  ,
	claimAmountCurrency Long  ,
	claimAmount BigDecimal  ,
	deductible BigDecimal  ,
	deductibleCurrency Long  ,
	deductibleCurrencyRate BigDecimal  ,
	deductibleDollar BigDecimal  ,
	billCurrency Long  ,
	billAmount BigDecimal  ,
	billCurrencyRate BigDecimal  ,
	billAmountDollar BigDecimal  ,
	remark TextBlob  ,
	isSigned Boolean  ,
	signUser Long  ,
	signDate Instant  ,
	processId Long  ,
	printNumber Integer  ,
}

relationship ManyToOne {
	CaseClaimBill{subcase(subcaseCode)} to VesselSubCase
}
relationship ManyToOne {
	CaseClaimBill{claimBillStatus(claimBillStatusName)} to ClaimBillStatus
}
relationship ManyToOne {
	CaseClaimBill{claimBillType(claimBillTypeName)} to ClaimBillType
}
relationship ManyToOne {
	CaseClaimBill{claimBillFinanceType(claimBillFinanceTypeName)} to ClaimBillFinanceType
}

relationship ManyToOne {
	CaseClaimBill{creditor(creditorName)} to Creditor
}

entity CaseClaimBillPrintLog {
	operateType String ,
	operateUser String ,
	operateDate Instant ,
}

relationship ManyToOne {
	CaseClaimBillPrintLog{caseClaimBill(claimBillCode)} to CaseClaimBill
}

entity CaseClaimBillDeleteLog {
    claimBillCode String ,
	operateType String ,
	operateUser String ,
	operateDate Instant ,
}



entity CaseClaimBillApprovalLog {
	processId Long ,
	insertTime Instant ,
	approvalUser String ,
	approvalOpinion String ,
	approvalTransition String ,
	remark String ,
}

relationship ManyToOne {
	CaseClaimBillApprovalLog{caseClaimBill(claimBillCode)} to CaseClaimBill
}


entity StatisticsCaseYearCount {
    caseYear String,
    insuranceType String,
    caseCount Integer,
    updateTime Instant,
}

entity StatisticsCaseMonthCount {
    caseYear  Integer,
    caseMonth Integer,
    insuranceType String,
    caseCount Integer,
    updateTime Instant,
}


entity CaseFeeBill {
	numberId Integer  ,
	isWriteOff   Boolean,
 }
relationship ManyToOne {
	CaseFeeBill{caseFee} to CaseFee
}
relationship ManyToOne {
	CaseFeeBill{caseClaimBill(claimBillCode)} to CaseClaimBill
}
relationship ManyToOne {
	CaseFeeBill{writeOffBill(claimBillCode)} to CaseClaimBill
}

entity CasePaymentBill {
	numberId Integer  ,
	currency Long  ,
	amount BigDecimal  ,
	isWriteOff Boolean  ,
}

relationship ManyToOne {
	CasePaymentBill{subcase} to VesselSubCase
}

relationship ManyToOne {
	CasePaymentBill{caseClaimBill(claimBillCode)} to CaseClaimBill
}

relationship ManyToOne {
	CasePaymentBill{writeOffBill(claimBillCode)} to CaseClaimBill
}


entity CaseRecoveryBill {
	numberId Integer  ,
	isWriteOff Boolean  ,
}

relationship ManyToOne {
	CaseRecoveryBill{caseRecovery} to CaseRecovery
}
relationship ManyToOne {
	CaseRecoveryBill{caseClaimBill(claimBillCode)} to CaseClaimBill
}
relationship ManyToOne {
	CaseRecoveryBill{writeOffBill(claimBillCode)} to CaseClaimBill
}



// Set pagination options
// paginate PartnerType with infinite-scroll
paginate * with pagination except StatisticsCaseYearCount, StatisticsCaseMonthCount

dto * with mapstruct except StatisticsCaseYearCount, StatisticsCaseMonthCount

//Set service options to all except few
service * with serviceImpl except StatisticsCaseYearCount, StatisticsCaseMonthCount

filter * except StatisticsCaseYearCount, StatisticsCaseMonthCount


microservice * with cpiclaim
